
// import './App.css'
// import { useState } from 'react'
// import { FloatingLabel, Form, Dropdown, Button, Alert } from 'react-bootstrap'

// function App() {
//   const [name, setName] = useState('');
//   const [address, setAddress] = useState('');
//   const [phone, setPhone] = useState('');
//   const [email, setEmail] = useState('');
//   const [gender, setGender] = useState('');
//   const [dob, setDob] = useState('');
//   const [course, setCourse] = useState('');
//   const [errors, setErrors] = useState({});

//   const validateForm = () => {
//     const newErrors = {};

//     if (!name.trim()) {
//       newErrors.name = 'Name is required';
//     }

//     if (!address.trim()) {
//       newErrors.address = 'Address is required';
//     }

//     const phonePattern = /^[0-9]{10}$/;
//     if (!phone.trim()) {
//       newErrors.phone = 'Phone number is required';
//     } else if (!phonePattern.test(phone)) {
//       newErrors.phone = 'Phone number must be 10 digits';
//     }

//     const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
//     if (!email.trim()) {
//       newErrors.email = 'Email is required';
//     } else if (!emailPattern.test(email)) {
//       newErrors.email = 'Email is not valid';
//     }

//     if (!gender) {
//       newErrors.gender = 'Gender is required';
//     }

//     if (!dob) {
//       newErrors.dob = 'Date of Birth is required';
//     }

//     if (!course) {
//       newErrors.course = 'Course selection is required';
//     }

//     setErrors(newErrors);
//     return Object.keys(newErrors).length === 0;
//   };

//   const handleSubmit = () => {
//     if (validateForm()) {
//       // Handle successful form submission here
//       alert('Form submitted successfully!');
//     }
//   };

//   return (
//     <>
//       <div className="d-flex justify-content-center align-items-center m-4">
//         <div className='bg-info w-75 p-5 border rounded text-center d-flex flex-column justify-content-center align-items-center'>

//           <FloatingLabel controlId="floatingInputName" label="Name" className="mb-3 w-75" >
//             <Form.Control 
//               type="text" 
//               placeholder="Name" 
//               value={name}
//               onChange={(e) => setName(e.target.value)}
//               isInvalid={!!errors.name}
//             />
//             <Form.Control.Feedback type="invalid">
//               {errors.name}
//             </Form.Control.Feedback>
//           </FloatingLabel>

//           <FloatingLabel controlId="floatingInputAddress" label="Address" className="mb-3 w-75" >
//             <Form.Control 
//               type="text" 
//               placeholder="Address" 
//               value={address}
//               onChange={(e) => setAddress(e.target.value)}
//               isInvalid={!!errors.address}
//             />
//             <Form.Control.Feedback type="invalid">
//               {errors.address}
//             </Form.Control.Feedback>
//           </FloatingLabel>

//           <FloatingLabel controlId="floatingInputPhone" label="Phone No" className="mb-3 w-75" >
//             <Form.Control 
//               type="tel" 
//               placeholder="Phone No" 
//               value={phone}
//               onChange={(e) => setPhone(e.target.value)}
//               isInvalid={!!errors.phone}
//             />
//             <Form.Control.Feedback type="invalid">
//               {errors.phone}
//             </Form.Control.Feedback>
//           </FloatingLabel>

//           <FloatingLabel controlId="floatingInputEmail" label="Email address" className="mb-3 w-75" >
//             <Form.Control 
//               type="email" 
//               placeholder="name@example.com" 
//               value={email}
//               onChange={(e) => setEmail(e.target.value)}
//               isInvalid={!!errors.email}
//             />
//             <Form.Control.Feedback type="invalid">
//               {errors.email}
//             </Form.Control.Feedback>
//           </FloatingLabel>

//           <Form>
//             <h6>Gender</h6>
//             <div className="mb-3">
//               <Form.Check
//                 inline
//                 label="Female"
//                 name="group1"
//                 type="radio"
//                 id="inline-radio-1"
//                 onChange={() => setGender('Female')}
//                 isInvalid={!!errors.gender}
//               />
//               <Form.Check
//                 inline
//                 label="Male"
//                 name="group1"
//                 type="radio"
//                 id="inline-radio-2"
//                 onChange={() => setGender('Male')}
//                 isInvalid={!!errors.gender}
//               />
//               <Form.Check
//                 inline
//                 label="Other"
//                 name="group1"
//                 type="radio"
//                 id="inline-radio-3"
//                 onChange={() => setGender('Other')}
//                 isInvalid={!!errors.gender}
//               />
//             </div>
//             {errors.gender && <div className="text-danger">{errors.gender}</div>}
//           </Form>

//           <FloatingLabel controlId="floatingInputDOB" label="DOB" className="mb-3 w-75" >
//             <Form.Control 
//               type="date" 
//               placeholder="dd-mm-yyyy" 
//               value={dob}
//               onChange={(e) => setDob(e.target.value)}
//               isInvalid={!!errors.dob}
//             />
//             <Form.Control.Feedback type="invalid">
//               {errors.dob}
//             </Form.Control.Feedback>
//           </FloatingLabel>

//           <Dropdown onSelect={(e) => setCourse(e)}>
//             <Dropdown.Toggle variant="primary" id="dropdown-basic">
//               {course ? course : 'Course'}
//             </Dropdown.Toggle>

//             <Dropdown.Menu>
//               <Dropdown.Item eventKey="Biology">Biology</Dropdown.Item>
//               <Dropdown.Item eventKey="Computer Science">Computer Science</Dropdown.Item>
//               <Dropdown.Item eventKey="Humanities">Humanities</Dropdown.Item>
//             </Dropdown.Menu>
//           </Dropdown>
//           {errors.course && <div className="text-danger mt-2">{errors.course}</div>}

//           <div className='d-flex mt-3'>
//             <Button className='me-3' variant="primary" onClick={handleSubmit}>Register</Button>{' '}
//             <Button variant="primary">Cancel</Button>{' '}
//           </div>
//         </div>
//       </div>
//     </>
//   )
// }

// export default App;
